package com.freeme.provider;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;

import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * Master of DAO (schema version 1): knows all DAOs.
 */
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 2;

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(com.freeme.provider.GalleryFilesDao.class);
    }

    /**
     * Creates underlying database table using DAOs.
     */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        com.freeme.provider.GalleryFilesDao.createTable(db, ifNotExists);
    }

    /**
     * Drops underlying database table using DAOs.
     */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        com.freeme.provider.GalleryFilesDao.dropTable(db, ifExists);
    }

    public com.freeme.provider.DaoSession newSession() {
        return new com.freeme.provider.DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }

    public com.freeme.provider.DaoSession newSession(IdentityScopeType type) {
        return new com.freeme.provider.DaoSession(db, type, daoConfigMap);
    }

    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }

    /**
     * WARNING: Drops all table on Upgrade! Use only during development.
     */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion
                    + " by dropping all tables");
            if (oldVersion == 1) {
                db.execSQL("ALTER TABLE gallery_files RENAME TO gallery_files_temp");
                db.execSQL("CREATE TABLE gallery_files( \n" +
                        "_id INTEGER PRIMARY KEY , \n" +
                        "_data TEXT NOT NULL ,\n" +
                        "_size INTEGER,\n" +
                        "media_type INTEGER,\n" +
                        "_display_name  TEXT,\n" +
                        "mime_type  TEXT,\n" +
                        "title TEXT,\n" +
                        "date_added INTEGER,\n" +
                        "date_modified INTEGER,\n" +
                        "description TEXT,\n" +
                        "picasa_id TEXT,\n" +
                        "duration INTEGER,\n" +
                        "artist TEXT,\n" +
                        "album TEXT,\n" +
                        "resolution TEXT,\n" +
                        "width INTEGER,\n" +
                        "height INTEGER,\n" +
                        "latitude REAL,\n" +
                        "longitude REAL,\n" +
                        "datetaken INTEGER,\n" +
                        "orientation INTEGER,\n" +
                        "mini_thumb_magic INTEGER,\n" +
                        "bucket_id TEXT,\n" +
                        "bucket_display_name TEXT,\n" +
                        "story_bucket_id INTEGER,\n" +
                        "is_hidden INTEGER,\n" +
                        "lbs_loc TEXT,\n" +
                        "country TEXT,\n" +
                        "city TEXT)");
                db.execSQL("insert into gallery_files( \n" +
                        "_id , \n" +
                        "_data ,\n" +
                        "_size,\n" +
                        "media_type,\n" +
                        "_display_name,\n" +
                        "mime_type,\n" +
                        "title,\n" +
                        "date_added,\n" +
                        "date_modified,\n" +
                        "description,\n" +
                        "picasa_id,\n" +
                        "duration,\n" +
                        "artist,\n" +
                        "album,\n" +
                        "resolution,\n" +
                        "width,\n" +
                        "height,\n" +
                        "latitude,\n" +
                        "longitude,\n" +
                        "datetaken,\n" +
                        "orientation,\n" +
                        "mini_thumb_magic,\n" +
                        "bucket_id,\n" +
                        "bucket_display_name,\n" +
                        "story_bucket_id,\n" +
                        "is_hidden,\n" +
                        "lbs_loc,\n" +
                        "country,\n" +
                        "city)\n" +
                        "select _id,\n" +
                        "_data \n," +
                        "_size,\n" +
                        "media_type,\n" +
                        "_display_name,\n" +
                        "mime_type,\n" +
                        "title,\n" +
                        "date_added,\n" +
                        "date_modified,\n" +
                        "description,\n" +
                        "picasa_id,\n" +
                        "duration,\n" +
                        "artist,\n" +
                        "album,\n" +
                        "resolution,\n" +
                        "width,\n" +
                        "height,\n" +
                        "latitude,\n" +
                        "longitude,\n" +
                        "datetaken,\n" +
                        "orientation,\n" +
                        "mini_thumb_magic,\n" +
                        "bucket_id,\n" +
                        "bucket_display_name,\n" +
                        "story_bucket_id,\n" +
                        "is_hidden,\n" +
                        "lbs_loc,\n" +
                        "null,\n" +
                        "null\n" +
                        "from gallery_files_temp");
                db.execSQL("DROP TABLE gallery_files_temp");
            }

            /*dropAllTables(db, true);
            onCreate(db);*/
        }
    }

}
